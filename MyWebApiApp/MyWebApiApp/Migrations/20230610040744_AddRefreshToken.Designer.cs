// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyWebApiApp.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MyWebApiApp.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230610040744_AddRefreshToken")]
    partial class AddRefreshToken
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("MyWebApiApp.Data.DonHang", b =>
                {
                    b.Property<Guid>("IdDonHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DiaChiGiao")
                        .HasColumnType("text");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("NgayGiao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NguoiNhan")
                        .HasColumnType("text");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("text");

                    b.Property<int>("TinhTrangDonHang")
                        .HasColumnType("integer");

                    b.HasKey("IdDonHang");

                    b.ToTable("DonHang");
                });

            modelBuilder.Entity("MyWebApiApp.Data.DonHangChiTiet", b =>
                {
                    b.Property<Guid>("IdDonHang")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdHangHoa")
                        .HasColumnType("uuid");

                    b.Property<double>("DonGia")
                        .HasColumnType("double precision");

                    b.Property<byte>("GiamGia")
                        .HasColumnType("smallint");

                    b.Property<int>("SoLuong")
                        .HasColumnType("integer");

                    b.HasKey("IdDonHang", "IdHangHoa");

                    b.HasIndex("IdHangHoa");

                    b.ToTable("ChiTietDonHang");
                });

            modelBuilder.Entity("MyWebApiApp.Data.HangHoa", b =>
                {
                    b.Property<Guid>("IdHangHoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("DonGia")
                        .HasColumnType("double precision");

                    b.Property<byte>("GiamGia")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("IdLoai")
                        .HasColumnType("uuid");

                    b.Property<string>("MoTa")
                        .HasColumnType("text");

                    b.Property<string>("TenHangHoa")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.HasKey("IdHangHoa");

                    b.HasIndex("IdLoai");

                    b.ToTable("HangHoa");
                });

            modelBuilder.Entity("MyWebApiApp.Data.Loai", b =>
                {
                    b.Property<Guid>("IdLoai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("IdLoai");

                    b.ToTable("Loai");
                });

            modelBuilder.Entity("MyWebApiApp.Data.NguoiDung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("NguoiDung");
                });

            modelBuilder.Entity("MyWebApiApp.Data.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ExpiredAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("IssuedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("JwtId")
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("MyWebApiApp.Data.DonHangChiTiet", b =>
                {
                    b.HasOne("MyWebApiApp.Data.DonHang", "DonHang")
                        .WithMany("DonHangChiTiets")
                        .HasForeignKey("IdDonHang")
                        .HasConstraintName("FK_DonHangCT_DonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyWebApiApp.Data.HangHoa", "HangHoa")
                        .WithMany("DonHangChiTiets")
                        .HasForeignKey("IdHangHoa")
                        .HasConstraintName("FK_DonHangCT_HangHoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonHang");

                    b.Navigation("HangHoa");
                });

            modelBuilder.Entity("MyWebApiApp.Data.HangHoa", b =>
                {
                    b.HasOne("MyWebApiApp.Data.Loai", "Loai")
                        .WithMany("HangHoas")
                        .HasForeignKey("IdLoai");

                    b.Navigation("Loai");
                });

            modelBuilder.Entity("MyWebApiApp.Data.RefreshToken", b =>
                {
                    b.HasOne("MyWebApiApp.Data.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("MyWebApiApp.Data.DonHang", b =>
                {
                    b.Navigation("DonHangChiTiets");
                });

            modelBuilder.Entity("MyWebApiApp.Data.HangHoa", b =>
                {
                    b.Navigation("DonHangChiTiets");
                });

            modelBuilder.Entity("MyWebApiApp.Data.Loai", b =>
                {
                    b.Navigation("HangHoas");
                });
#pragma warning restore 612, 618
        }
    }
}
